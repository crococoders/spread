# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not 
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
# Start database: docker-compose up db
# Run migrations: docker-compose up migrate
#       Stop all: docker-compose down (add -v to wipe db)
#
version: '3.7'

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  CONTENT_POSTGRES_HOST: content_db_1
  CONTENT_POSTGRES_PORT: 5432
  CONTENT_POSTGRES_USERNAME: postgres
  CONTENT_POSTGRES_PASSWORD: postgres
  CONTENT_POSTGRES_DB: postgres

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      <<: *shared_environment
#    env_file:
#    - ../../.env
    depends_on:
      - db
    ports:
      - '8080:80'
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "80"]
  migrate:
    image: content:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--yes"]
  revert:
    image: content:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    command: ["migrate", "--revert", "--yes"]
  db:
    image: postgres:12.1-alpine
    environment:
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: postgres
    ports:
      - '5432:5432'
